{"version":3,"sources":["components/filter.js","services/persons.js","components/person.js","components/filteredPeople.js","components/form.js","components/notification.js","App.js","index.js"],"names":["Filter","filter","setFilter","value","onChange","event","target","baseUrl","Person","number","name","deletePerson","onClick","FilteredPeople","people","setPersons","id","window","confirm","axios","delete","remove","catch","error","console","log","p","person","map","Form","persons","setSuccessMessage","setErrorMessage","useState","newName","setNewName","newNumber","setNewNumber","handleSubmit","e","preventDefault","newObject","oldPerson","find","toLowerCase","put","then","response","data","returnedPerson","setTimeout","post","create","onSubmit","type","Notification","message","isSuccess","className","App","successMessage","errorMessage","useEffect","get","filteredPersons","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.caa19017.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Filter({ filter, setFilter }) {\r\n  return (\r\n    <p>\r\n      Filter shown with{' '}\r\n      <input\r\n        value={filter}\r\n        onChange={(event) => setFilter(event.target.value)}\r\n      />\r\n    </p>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nexport const getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport const create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport const update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport const remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request;\r\n};\r\n","import React from 'react';\r\n\r\nexport default function Person({ number, name, deletePerson }) {\r\n  return (\r\n    <li>\r\n      {name} - {number} <button onClick={deletePerson}>delete</button>\r\n    </li>\r\n  );\r\n}\r\n","import { remove } from '../services/persons';\r\nimport Person from './person';\r\n\r\nexport default function FilteredPeople({ people, setPersons }) {\r\n  const deletePerson = (id, name) => {\r\n    const result = window.confirm(\r\n      `Are you sure you want to delete this ${name}?`\r\n    );\r\n    if (result) {\r\n      remove(id).catch((error) => console.log(error));\r\n      setPersons((p) => p.filter((person) => id !== person.id));\r\n    }\r\n  };\r\n  return (\r\n    <ul>\r\n      {people.map((person) => (\r\n        <Person\r\n          key={person.name}\r\n          name={person.name}\r\n          number={person.number}\r\n          deletePerson={() => deletePerson(person.id, person.name)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { create, update } from '../services/persons';\r\n\r\nexport default function Form({\r\n  persons,\r\n  setPersons,\r\n  setSuccessMessage,\r\n  setErrorMessage,\r\n}) {\r\n  const [newName, setNewName] = useState('');\r\n  const [newNumber, setNewNumber] = useState('');\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const oldPerson = persons.find(\r\n      (person) => person.name.toLowerCase() === newName.toLowerCase()\r\n    );\r\n    if (oldPerson) {\r\n      const result = window.confirm(\r\n        `${newName} is already added to the phonebook, replace the old number with the new one?`\r\n      );\r\n      if (result) {\r\n        update(oldPerson.id, {\r\n          name: newName,\r\n          number: newNumber,\r\n        })\r\n          .then((returnedPerson) => {\r\n            setPersons((people) =>\r\n              people.map((person) =>\r\n                person.id !== oldPerson.id ? person : returnedPerson\r\n              )\r\n            );\r\n            setSuccessMessage(`Updated ${newName} number`);\r\n            setTimeout(() => setSuccessMessage(null), 5000);\r\n          })\r\n          .catch((error) => {\r\n            setErrorMessage(\r\n              `Person ${newName} was already removed from the server`\r\n            );\r\n            setTimeout(() => {\r\n              setErrorMessage(null);\r\n            }, 5000);\r\n          });\r\n      }\r\n    } else {\r\n      const newPerson = { name: newName, number: newNumber };\r\n      create(newPerson).then((returnedPerson) =>\r\n        setPersons((p) => [...p, returnedPerson])\r\n      );\r\n      setSuccessMessage(`Added ${newName}`);\r\n      setTimeout(() => setSuccessMessage(null), 5000);\r\n    }\r\n    setNewName('');\r\n    setNewNumber('');\r\n  };\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <div>\r\n        name:{' '}\r\n        <input\r\n          value={newName}\r\n          onChange={(event) => setNewName(event.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        number:{' '}\r\n        <input\r\n          value={newNumber}\r\n          onChange={(event) => setNewNumber(event.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","const Notification = ({ message, isSuccess }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return isSuccess ? (\r\n    <div className=\"notification\">{message}</div>\r\n  ) : (\r\n    <div className=\"error\">{message}</div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useEffect, useState } from 'react';\nimport Filter from './components/filter';\nimport FilteredPeople from './components/filteredPeople';\nimport Form from './components/form';\nimport Notification from './components/notification';\nimport { getAll } from './services/persons';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filter, setFilter] = useState('');\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    getAll().then((data) => setPersons(data));\n  }, []);\n\n  const filteredPersons = persons.filter((person) =>\n    person.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter filter={filter} setFilter={setFilter} />\n      <Notification message={successMessage} isSuccess={true} />\n      <Notification message={errorMessage} isSuccess={false} />\n      <h2>Add a new</h2>\n      <Form\n        persons={persons}\n        setPersons={setPersons}\n        setSuccessMessage={setSuccessMessage}\n        setErrorMessage={setErrorMessage}\n      />\n      <h2>Numbers</h2>\n      <FilteredPeople\n        people={filteredPersons}\n        setPersons={setPersons}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}